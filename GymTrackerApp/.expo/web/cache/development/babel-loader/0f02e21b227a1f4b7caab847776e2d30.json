{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { authentication } from \"../Firebase\";\nimport { signInWithEmailAndPassword, signOut, updatePassword, sendPasswordResetEmail } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passsword = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      forgotPasswordBoolean = _useState6[0],\n      setForgotPasswordBoolean = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailPassword = _useState8[0],\n      setNewPasswordEmail = _useState8[1];\n\n  var LogInUser = function LogInUser() {\n    signInWithEmailAndPassword(authentication, email, passsword).then(function (re) {\n      navigation.navigate('MainMenuScreen');\n    }).catch(function (err) {\n      console.log(err);\n      Alert.alert(\"Error\", \"Invalid Log In Information\", [{\n        text: \"Cancel\"\n      }]);\n    });\n  };\n\n  var setBooleanTrue = function setBooleanTrue() {\n    setForgotPasswordBoolean(true);\n  };\n\n  var setBooleanFalse = function setBooleanFalse() {\n    setForgotPasswordBoolean(false);\n  };\n\n  var resetPassword = function resetPassword() {\n    sendPasswordResetEmail(authentication, emailPassword).then(function () {\n      Alert.alert(\"New Password Set\", [{\n        text: \"Cancel\"\n      }]);\n    }).catch(function (error) {\n      console.log(\"Error\");\n    });\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: forgotPasswordBoolean == true ? _jsxs(View, {\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: emailPassword,\n        onChangeText: function onChangeText(text) {\n          return setNewPasswordEmail(text);\n        },\n        placeholder: \"Enter Account Email\"\n      }), _jsx(Button, {\n        title: \"Send Reset Link\",\n        onPress: resetPassword\n      }), _jsx(Button, {\n        title: \"Back\",\n        onPress: setBooleanFalse\n      })]\n    }) : _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.textStyle,\n        children: \"Enter Email\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        placeholder: \"Email\"\n      }), _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Enter Password\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: passsword,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true\n      }), _jsx(Pressable, {\n        onPress: setBooleanTrue,\n        children: _jsx(Text, {\n          children: \"Forgot Password?\"\n        })\n      }), _jsx(Button, {\n        title: \"Sign In\",\n        onPress: LogInUser\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    width: 50,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  textStyle: {\n    fontWeight: 'bold'\n  }\n});\nexport default LogInScreen;","map":{"version":3,"sources":["C:/Users/oskar/Documents/SemesterTwo/FinalYear_Project/GymTrackerApp/screens/LoginScreen.js"],"names":["React","useState","authentication","signInWithEmailAndPassword","signOut","updatePassword","sendPasswordResetEmail","LogInScreen","navigation","email","setEmail","passsword","setPassword","forgotPasswordBoolean","setForgotPasswordBoolean","emailPassword","setNewPasswordEmail","LogInUser","then","re","navigate","catch","err","console","log","Alert","alert","text","setBooleanTrue","setBooleanFalse","resetPassword","error","flex","alignItems","justifyContent","styles","input","textStyle","StyleSheet","create","container","backgroundColor","height","width","margin","borderWidth","padding","fontWeight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Button, TextInput, Alert, Pressable } from 'react-native';\r\nimport * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { authentication } from '../Firebase';\r\nimport { signInWithEmailAndPassword, signOut, updatePassword, sendPasswordResetEmail } from \"firebase/auth\";\r\n\r\nfunction LogInScreen({ navigation }) {\r\n  const [email, setEmail] = useState('')\r\n  const [passsword, setPassword] = useState('')\r\n  // const user = authentication.currentUser;\r\n\r\n  const [forgotPasswordBoolean, setForgotPasswordBoolean] = useState(false);\r\n\r\n  // const [newPassword, setNewPassword] = useState('')\r\n  // const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n  const [emailPassword, setNewPasswordEmail] = useState('')\r\n  // const user = emailPassword;\r\n\r\n\r\n  const LogInUser = ()=>{\r\n\r\n    signInWithEmailAndPassword(authentication, email, passsword)\r\n\r\n    .then((re) =>{\r\n      // setIsSignedIn(true);\r\n      // console.log(authentication.currentUser.emailVerified);\r\n      // if(authentication.currentUser.emailVerified == true)\r\n      // {\r\n        navigation.navigate('MainMenuScreen')\r\n      // }\r\n      // else\r\n      // {\r\n      //   Alert.alert\r\n      //   (\r\n      //     \"Error\",\r\n      //     \"Email has not been verified!\",\r\n      //     [\r\n      //       {\r\n      //         text: \"Cancel\",\r\n      //       },\r\n      //     ],\r\n      //   );\r\n      // }\r\n      // navigation.navigate('MainMenuScreen')\r\n\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err);\r\n      Alert.alert\r\n      (\r\n        \"Error\",\r\n        \"Invalid Log In Information\",\r\n        [\r\n          {\r\n            text: \"Cancel\",\r\n          },\r\n        ],\r\n      );\r\n    })\r\n  }\r\n\r\n  const setBooleanTrue = () => {\r\n    setForgotPasswordBoolean(true);\r\n  }\r\n\r\n  const setBooleanFalse = () => {\r\n    setForgotPasswordBoolean(false);\r\n  }\r\n\r\n  const resetPassword = () => {\r\n    sendPasswordResetEmail(authentication, emailPassword)\r\n    .then(() => \r\n    {\r\n      // Update successful.\r\n      Alert.alert\r\n      (\r\n        \"New Password Set\",\r\n        [\r\n          {\r\n            text: \"Cancel\",\r\n          },\r\n        ],\r\n      );\r\n    }).catch((error) => \r\n    {\r\n      // An error ocurred\r\n      // ...\r\n      console.log(\"Error\");\r\n    });\r\n    // setForgotPasswordBoolean(false);\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n\r\n       {forgotPasswordBoolean == true?\r\n        <View>\r\n          <TextInput\r\n          style={styles.input}\r\n          value={emailPassword}\r\n          onChangeText={text => setNewPasswordEmail(text)}\r\n          placeholder=\"Enter Account Email\"\r\n            />\r\n\r\n          {/* <TextInput\r\n          style={styles.input}\r\n          value={newPassword}\r\n          onChangeText={text => setNewPassword(text)}\r\n          placeholder=\"New Password\"\r\n            />\r\n\r\n          <TextInput\r\n          style={styles.input}\r\n          value={confirmNewPassword}\r\n          onChangeText={text => setConfirmNewPassword(text)}\r\n          placeholder=\"Confirm new Password\"\r\n            /> */}\r\n\r\n          <Button title=\"Send Reset Link\" onPress={resetPassword}></Button>\r\n          <Button title=\"Back\" onPress={setBooleanFalse}></Button>\r\n\r\n\r\n        </View>\r\n\r\n         :\r\n\r\n         <View>\r\n            <Text style={styles.textStyle}>Enter Email</Text>\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              value={email}\r\n              onChangeText={text => setEmail(text)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <Text style={styles.textStyle}>Enter Password</Text>\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              value={passsword}\r\n              onChangeText={text => setPassword(text)}\r\n              placeholder=\"Password\"\r\n              secureTextEntry\r\n            />\r\n\r\n            <Pressable onPress={setBooleanTrue}>\r\n              <Text>Forgot Password?</Text>\r\n            </Pressable>\r\n\r\n            <Button title=\"Sign In\" onPress={LogInUser}></Button>\r\n\r\n          </View>\r\n      }\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create\r\n({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  input: {\r\n    height: 40,\r\n    width: 50,\r\n    margin: 12,\r\n    borderWidth: 2,\r\n    padding: 10,\r\n    backgroundColor: 'white'\r\n  },\r\n  textStyle: {\r\n    fontWeight: 'bold'\r\n  },\r\n});\r\n\r\nexport default LogInScreen;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}