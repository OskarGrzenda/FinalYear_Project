{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { authentication } from \"../Firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passsword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var logo = '../pictures/GymTrackerLogo.png';\n\n  var SignUpUser = function SignUpUser() {\n    if (passsword == confirmPassword) {\n      createUserWithEmailAndPassword(authentication, email, passsword).then(function (re) {\n        console.log(re);\n        sendEmailVerification(authentication.currentUser).then(function () {\n          Alert.alert(\"Succes!\", \"Successfully created account!\", [{\n            text: \"Cancel\"\n          }]);\n          navigation.navigate('LoginScreen');\n          console.log(\"Email Sent!\");\n        });\n      }).catch(function (re) {\n        console.log(re);\n\n        if (passsword.length < 6) {\n          Alert.alert(\"Error\", \"Password must be 6 digits or greater!\", [{\n            text: \"Cancel\"\n          }]);\n        } else if (email == \"\") {\n          Alert.alert(\"Error\", \"Input email!\", [{\n            text: \"Cancel\"\n          }]);\n        } else if (re) {\n          Alert.alert(\"Error\", \"Not a valid email or email in use!\", [{\n            text: \"Cancel\"\n          }]);\n        }\n      });\n    } else if (passsword != confirmPassword) {\n      Alert.alert(\"Error\", \"Passwords don't match!\", [{\n        text: \"Cancel\"\n      }]);\n    }\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Image, {\n      source: require(logo),\n      style: {\n        width: 370,\n        height: 100,\n        resizeMode: 'contain'\n      }\n    }), _jsx(Text, {\n      style: styles.textStyle,\n      children: \"Enter Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      placeholder: \"Email\"\n    }), _jsx(Text, {\n      style: styles.textStyle,\n      children: \"Enter Password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: passsword,\n      onChangeText: function onChangeText(text) {\n        return setNewPassword(text);\n      },\n      placeholder: \"Password\",\n      secureTextEntry: true\n    }), _jsx(Text, {\n      style: styles.textStyle,\n      children: \"Confirm Password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: confirmPassword,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      },\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true\n    }), _jsx(Button, {\n      style: {\n        marginBottom: 20\n      },\n      title: \"Sign In\",\n      onPress: SignUpUser\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 4,\n    padding: 10\n  },\n  textStyle: {\n    fontWeight: 'bold'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["C:/Users/oskar/Documents/SemesterTwo/FinalYear_Project/GymTrackerApp/screens/SignupScreen.js"],"names":["React","useState","useEffect","createUserWithEmailAndPassword","sendEmailVerification","authentication","SignUpScreen","navigation","email","setEmail","passsword","setNewPassword","confirmPassword","setConfirmPassword","logo","SignUpUser","then","re","console","log","currentUser","Alert","alert","text","navigate","catch","length","flex","alignItems","justifyContent","require","width","height","resizeMode","styles","textStyle","input","marginBottom","StyleSheet","create","container","backgroundColor","margin","borderWidth","padding","fontWeight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Button, TextInput, Alert, Image  } from 'react-native';\r\n// import * as React from 'react';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\r\nimport { authentication } from '../Firebase';\r\n\r\nfunction SignUpScreen({ navigation }) {\r\n    const [email, setEmail] = useState('')\r\n    const [passsword, setNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const logo = '../pictures/GymTrackerLogo.png';\r\n\r\n    // const [isSignedIn, setIsSignedIn] = useState(false);\r\n\r\n    const SignUpUser = () =>{\r\n      if(passsword == confirmPassword)\r\n      {\r\n        createUserWithEmailAndPassword(authentication, email, passsword)\r\n        .then((re) =>{\r\n            console.log(re);\r\n            // setIsSignedIn(true)\r\n            sendEmailVerification(authentication.currentUser)\r\n            .then(() => {\r\n              Alert.alert\r\n              (\r\n                \"Succes!\",\r\n                \"Successfully created account!\",\r\n                [\r\n                  {\r\n                    text: \"Cancel\",\r\n                  },\r\n                ],\r\n              );  \r\n              navigation.navigate('LoginScreen')\r\n\r\n              console.log(\"Email Sent!\")\r\n            });\r\n\r\n        })\r\n        .catch((re) =>{\r\n            console.log(re);\r\n            if(passsword.length < 6)\r\n            {\r\n              Alert.alert\r\n              (\r\n                \"Error\",\r\n                \"Password must be 6 digits or greater!\",\r\n                [\r\n                  {\r\n                    text: \"Cancel\",\r\n                  },\r\n                ],\r\n              );\r\n            }\r\n            else if(email == \"\")\r\n            {\r\n              Alert.alert\r\n              (\r\n                \"Error\",\r\n                \"Input email!\",\r\n                [\r\n                  {\r\n                    text: \"Cancel\",\r\n                  },\r\n                ],\r\n              );\r\n            }\r\n            else if(re)\r\n            {\r\n              Alert.alert\r\n              (\r\n                \"Error\",\r\n                \"Not a valid email or email in use!\",\r\n                [\r\n                  {\r\n                    text: \"Cancel\",\r\n                  },\r\n                ],\r\n              );\r\n            }\r\n        })\r\n      }\r\n      else if(passsword != confirmPassword)\r\n      {\r\n        Alert.alert\r\n        (\r\n          \"Error\",\r\n          \"Passwords don't match!\",\r\n          [\r\n            {\r\n              text: \"Cancel\",\r\n            },\r\n          ],\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n        <Image source={require(logo)} style={{ width: 370, height: 100, resizeMode: 'contain' }}/>\r\n\r\n        <Text style={styles.textStyle}>Enter Email</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          value={email}\r\n          onChangeText={text => setEmail(text)}\r\n          placeholder=\"Email\"\r\n        />\r\n  \r\n        <Text style={styles.textStyle}>Enter Password</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          value={passsword}\r\n          onChangeText={text => setNewPassword(text)}\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n        />\r\n\r\n        <Text style={styles.textStyle}>Confirm Password</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          value={confirmPassword}\r\n          onChangeText={text => setConfirmPassword(text)}\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry\r\n        />\r\n        \r\n        <Button\r\n          style={{marginBottom: 20}}\r\n          title=\"Sign In\"\r\n          onPress={SignUpUser}\r\n        />\r\n  \r\n      </View>\r\n    );\r\n  }\r\n\r\n  const styles = StyleSheet.create\r\n({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 4,\r\n    padding: 10,\r\n  },\r\n  textStyle: {\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}