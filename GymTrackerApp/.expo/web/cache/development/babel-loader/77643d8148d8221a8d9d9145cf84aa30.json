{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState, useEffect } from 'react';\nimport AddWorkout from \"../components/addWorkout\";\nimport { db, useAuth, authentication } from \"../Firebase\";\nimport { collection, doc, setDoc, deleteDoc, onSnapshot } from 'firebase/firestore';\nimport { signOut } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MainMenuScreen = function MainMenuScreen(_ref) {\n  var navigation = _ref.navigation;\n  var currentUser = useAuth();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      workoutsDB = _useState2[0],\n      setWorkoutsDB = _useState2[1];\n\n  useEffect(function () {\n    var realtime = onSnapshot(collection(db, \"WorkoutDay\"), function (snapshot) {\n      setWorkoutsDB(snapshot.docs.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        });\n      }));\n    });\n    return realtime;\n  }, []);\n\n  var addWorkouts = function addWorkouts(text, uid) {\n    var randomCollection;\n    return _regeneratorRuntime.async(function addWorkouts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            randomCollection = Math.random().toString();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(setDoc(doc(db, \"WorkoutDay\", randomCollection), {\n              name: text,\n              uid: uid,\n              ubid: randomCollection,\n              exerciseArray: []\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openWorkout = function openWorkout(id) {\n    navigation.navigate('ExerciseScreen', {\n      id: id\n    });\n  };\n\n  var deletDoc = function deletDoc(id) {\n    var docRef;\n    return _regeneratorRuntime.async(function deletDoc$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            docRef = doc(db, \"WorkoutDay\", id);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(deleteDoc(docRef));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [_jsx(Text, {\n        style: styles.textStyle,\n        children: \"Enter Workout Name\"\n      }), _jsx(AddWorkout, {\n        sendData: addWorkouts\n      }), _jsx(View, {\n        style: styles.space\n      }), workoutsDB.map(function (data) {\n        if (data.uid == (currentUser == null ? void 0 : currentUser.uid)) {\n          return _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Button, {\n              onPress: function onPress() {\n                return openWorkout(data.id);\n              },\n              title: data.name,\n              color: \"black\"\n            }), _jsx(Button, {\n              title: 'X',\n              color: \"red\",\n              onPress: function onPress() {\n                return deletDoc(data.id);\n              }\n            })]\n          }, data.id);\n        }\n      }), _jsxs(View, {\n        style: styles.bottomView,\n        children: [_jsx(Button, {\n          title: \"Profile\",\n          onPress: function onPress() {\n            return navigation.navigate('UserProfile');\n          }\n        }), _jsx(Button, {\n          title: \"Progress Pictures\",\n          onPress: function onPress() {\n            return navigation.navigate('ProgressPictures');\n          }\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  textStyle: {\n    fontWeight: 'bold'\n  },\n  bottomView: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#EE5407',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    bottom: 0\n  }\n});\nexport default MainMenuScreen;","map":{"version":3,"sources":["C:/Users/oskar/Documents/SemesterTwo/FinalYear_Project/GymTrackerApp/screens/MainMenuScreen.js"],"names":["React","useState","useEffect","AddWorkout","db","useAuth","authentication","collection","doc","setDoc","deleteDoc","onSnapshot","signOut","MainMenuScreen","navigation","currentUser","workoutsDB","setWorkoutsDB","realtime","snapshot","docs","map","data","id","addWorkouts","text","uid","randomCollection","Math","random","toString","name","ubid","exerciseArray","openWorkout","navigate","deletDoc","docRef","alignItems","justifyContent","styles","textStyle","space","flexDirection","bottomView","StyleSheet","create","container","flex","backgroundColor","button","padding","input","height","margin","borderWidth","width","fontWeight","position","bottom"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Pressable, FlatList, Button, ScrollView  } from 'react-native';\r\nimport React, { useState, useEffect } from 'react'\r\nimport AddWorkout from '../components/addWorkout';\r\nimport { db, useAuth, authentication } from \"../Firebase\";\r\nimport { collection, doc, setDoc, deleteDoc, onSnapshot } from 'firebase/firestore';\r\nimport { signOut  } from \"firebase/auth\";\r\n\r\n  const MainMenuScreen = ({navigation}) => {\r\n\r\n    // const [workoutsDB, setWorkoutsDB] = useState([]);\r\n    // const workoutCol = collection(db, 'WorkoutDay');\r\n    const currentUser = useAuth();\r\n    const [workoutsDB, setWorkoutsDB] = useState([]);\r\n    // console.log(workoutsDB);\r\n\r\n    useEffect (() => {\r\n      const realtime = onSnapshot(collection(db, \"WorkoutDay\"), (snapshot) => {\r\n        setWorkoutsDB(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n      });\r\n      return realtime;\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //   const GetData = async () => {\r\n    //     // const workoutCol = collection(db, 'WorkoutDay');\r\n    //     const workoutSnapshot = await getDocs(workoutCol);\r\n    //     // const workoutList = workoutSnapshot.docs.map(doc => doc.data());\r\n    //     setWorkoutsDB(workoutSnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    //     // console.log(workoutList);\r\n    //   }\r\n    //   GetData();\r\n    // }, []);\r\n\r\n  const addWorkouts = async (text, uid) => \r\n  {\r\n    //Set New Exercise Name & Add it to a new document in the collection \r\n    const randomCollection = Math.random().toString();\r\n    await setDoc(doc(db, \"WorkoutDay\", randomCollection ), {\r\n      name: text,\r\n      uid: uid,\r\n      ubid: randomCollection,\r\n      exerciseArray: [],\r\n    })\r\n  };\r\n\r\n  const openWorkout = (id) => \r\n  { \r\n    navigation.navigate('ExerciseScreen', {id})\r\n  }\r\n\r\n  const deletDoc = async (id) =>\r\n  {\r\n    const docRef = doc(db, \"WorkoutDay\", id);\r\n    await deleteDoc(docRef);\r\n  }\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n\r\n      {/* <Text>Currently logged in as: {currentUser?.email}</Text>\r\n      <Text>User Id: {currentUser?.uid}</Text> */}\r\n\r\n        <Text style={styles.textStyle}>Enter Workout Name</Text>\r\n        \r\n        <AddWorkout sendData={addWorkouts} />\r\n        <View style={styles.space} />\r\n\r\n          {workoutsDB.map((data) => {\r\n            if(data.uid == currentUser?.uid)\r\n              {\r\n                return (\r\n                  <View style={{ flexDirection:\"row\" }} key={data.id} >\r\n                      <Button onPress={() => openWorkout(data.id) } title={data.name}  color='black'/> \r\n                      <Button title={'X'} color='red' onPress={() => deletDoc(data.id) }></Button>\r\n                  </View>\r\n                );\r\n              }\r\n          })}\r\n\r\n          <View style={styles.bottomView}>\r\n            <Button title=\"Profile\" onPress={() => navigation.navigate('UserProfile')}/>\r\n            <Button title=\"Progress Pictures\" onPress={() => navigation.navigate('ProgressPictures')}/>\r\n          </View>\r\n      </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\nconst styles = StyleSheet.create\r\n({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    width: 20, \r\n    height: 20,\r\n  },\r\n  textStyle: {\r\n    fontWeight: 'bold',\r\n  },\r\n  bottomView: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#EE5407',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    position: 'absolute', //Here is the trick\r\n    bottom: 0, //Here is the trick\r\n  },\r\n});\r\n\r\nexport default MainMenuScreen;\r\n"]},"metadata":{},"sourceType":"module"}