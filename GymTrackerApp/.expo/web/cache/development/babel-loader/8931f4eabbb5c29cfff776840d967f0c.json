{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { db, useAuth, authentication, fbStorage } from \"../Firebase\";\nimport { updateEmail, sendEmailVerification, getAuth, deleteUser, signOut } from \"firebase/auth\";\nimport { ref, uploadBytes, getStorage, getDownloadURL } from \"firebase/storage\";\nimport { collection, doc, setDoc, deleteDoc, onSnapshot } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserProfile = function UserProfile(_ref) {\n  var navigation = _ref.navigation;\n  var currentUser = useAuth();\n  var storage = getStorage();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newEmail = _useState4[0],\n      setEmail = _useState4[1];\n\n  var basicImage = '../pictures/profilePicture.png';\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      profilePictureBoolean = _useState6[0],\n      setProfilePictureBoolean = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      workoutsDB = _useState8[0],\n      setWorkoutsDB = _useState8[1];\n\n  useEffect(function () {\n    var realtime = onSnapshot(collection(db, \"ProfilePictures\"), function (snapshot) {\n      setWorkoutsDB(snapshot.docs.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        });\n      }));\n    });\n    return realtime;\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result, reff, img, bytes, reference;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Picking Image\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n            console.log(result);\n\n            if (result.cancelled) {\n              _context.next = 18;\n              break;\n            }\n\n            reff = ref(storage, 'profilePictures/' + currentUser.uid);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(fetch(result.uri));\n\n          case 9:\n            img = _context.sent;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(img.blob());\n\n          case 12:\n            bytes = _context.sent;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(uploadBytes(reff, bytes));\n\n          case 15:\n            reference = ref(storage, 'profilePictures/' + (currentUser == null ? void 0 : currentUser.uid));\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(getDownloadURL(reference).then(function (x) {\n              console.log(\"The Url \" + x);\n              setDoc(doc(db, \"ProfilePictures\", currentUser == null ? void 0 : currentUser.uid), {\n                uid: currentUser.uid,\n                image: x\n              });\n            }));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var changeEmail = function changeEmail() {\n    return _regeneratorRuntime.async(function changeEmail$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            updateEmail(authentication.currentUser, newEmail).then(function () {\n              sendEmailVerification(authentication.currentUser).then(function () {\n                navigation.navigate('LoginScreen');\n                Alert.alert(\"Email sent to new email\", \"Verify your email to be able to log in again!\", [{\n                  text: \"Cancel\"\n                }]);\n              });\n            }).catch(function (error) {\n              Alert.alert(\"Error\", \"New email invalid or in use\", [{\n                text: \"Cancel\"\n              }]);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteAccount = function deleteAccount() {\n    return _regeneratorRuntime.async(function deleteAccount$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            deleteUser(currentUser).then(function () {\n              Alert.alert(\"Succes!\", \"Successfully deleted account!\", [{\n                text: \"Cancel\"\n              }]);\n              navigation.navigate('Home');\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var SignOutUser = function SignOutUser() {\n    signOut(authentication).then(function (re) {\n      navigation.navigate('Home');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"User Profile\"\n    }), profilePictureBoolean == true ? _jsx(View, {\n      children: _jsx(Image, {\n        source: require(basicImage),\n        style: {\n          width: 160,\n          height: 160\n        }\n      })\n    }) : _jsx(View, {\n      children: workoutsDB.map(function (data) {\n        if (data.id == (currentUser == null ? void 0 : currentUser.uid)) {\n          return _jsx(View, {\n            children: _jsx(Image, {\n              source: {\n                uri: data.image\n              },\n              style: {\n                width: 160,\n                height: 160\n              }\n            })\n          });\n        }\n      })\n    }), _jsx(Button, {\n      title: \"Change Profile Picture\",\n      onPress: pickImage\n    }), _jsx(Text, {\n      children: \"Change Email\"\n    }), _jsx(Text, {\n      children: \"Current Email\"\n    }), _jsx(Text, {\n      children: currentUser == null ? void 0 : currentUser.email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"New Email\",\n      onChangeText: setEmail\n    }), _jsx(Button, {\n      title: \"Update Email\",\n      onPress: function onPress() {\n        return changeEmail();\n      }\n    }), _jsx(Button, {\n      title: \"Sign out\",\n      onPress: SignOutUser\n    }), _jsx(Button, {\n      title: \"Delete Account\",\n      color: \"red\",\n      onPress: function onPress() {\n        return deleteAccount();\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default UserProfile;","map":{"version":3,"sources":["C:/Users/oskar/Documents/SemesterTwo/FinalYear_Project/GymTrackerApp/screens/UserProfile.js"],"names":["React","useState","useEffect","ImagePicker","db","useAuth","authentication","fbStorage","updateEmail","sendEmailVerification","getAuth","deleteUser","signOut","ref","uploadBytes","getStorage","getDownloadURL","collection","doc","setDoc","deleteDoc","onSnapshot","UserProfile","navigation","currentUser","storage","image","setImage","newEmail","setEmail","basicImage","profilePictureBoolean","setProfilePictureBoolean","workoutsDB","setWorkoutsDB","realtime","snapshot","docs","map","data","id","pickImage","console","log","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","reff","uid","fetch","uri","img","blob","bytes","reference","then","x","changeEmail","navigate","Alert","alert","text","catch","error","deleteAccount","SignOutUser","re","err","flex","alignItems","require","width","height","email","styles","input","StyleSheet","create","margin","borderWidth","padding"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,cAAtB,EAAsCC,SAAtC;AACA,SAASC,WAAT,EAAsBC,qBAAtB,EAA6CC,OAA7C,EAAsDC,UAAtD,EAAkEC,OAAlE,QAAiF,eAAjF;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,cAAvC,QAA6D,kBAA7D;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,oBAA/D;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAElC,MAAMC,WAAW,GAAGnB,OAAO,EAA3B;AACA,MAAMoB,OAAO,GAAGV,UAAU,EAA1B;;AAEA,kBAA0Bd,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOyB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA6B1B,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAO2B,QAAP;AAAA,MAAiBC,QAAjB;;AACA,MAAMC,UAAU,GAAG,gCAAnB;;AACA,mBAA0D7B,QAAQ,CAAC,IAAD,CAAlE;AAAA;AAAA,MAAO8B,qBAAP;AAAA,MAA8BC,wBAA9B;;AACA,mBAAoC/B,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOgC,UAAP;AAAA,MAAmBC,aAAnB;;AAGAhC,EAAAA,SAAS,CAAE,YAAM;AACf,QAAMiC,QAAQ,GAAGd,UAAU,CAACJ,UAAU,CAACb,EAAD,EAAK,iBAAL,CAAX,EAAoC,UAACgC,QAAD,EAAc;AAC3EF,MAAAA,aAAa,CAACE,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACpB,GAAD;AAAA,+CAAeA,GAAG,CAACqB,IAAJ,EAAf;AAA2BC,UAAAA,EAAE,EAAEtB,GAAG,CAACsB;AAAnC;AAAA,OAAlB,CAAD,CAAb;AACD,KAF0B,CAA3B;AAGA,WAAOL,QAAP;AACD,GALQ,EAKN,EALM,CAAT;;AAQA,MAAMM,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADc;AAAA,6CAGKxC,WAAW,CAACyC,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAE1C,WAAW,CAAC2C,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CAHL;;AAAA;AAGVC,YAAAA,MAHU;AAUdT,YAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;;AAVc,gBAYVA,MAAM,CAACC,SAZG;AAAA;AAAA;AAAA;;AAeNC,YAAAA,IAfM,GAeCxC,GAAG,CAACY,OAAD,EAAU,qBAAqBD,WAAW,CAAC8B,GAA3C,CAfJ;AAAA;AAAA,6CAkBMC,KAAK,CAACJ,MAAM,CAACK,GAAR,CAlBX;;AAAA;AAkBNC,YAAAA,GAlBM;AAAA;AAAA,6CAmBQA,GAAG,CAACC,IAAJ,EAnBR;;AAAA;AAmBNC,YAAAA,KAnBM;AAAA;AAAA,6CAqBN7C,WAAW,CAACuC,IAAD,EAAOM,KAAP,CArBL;;AAAA;AAyBNC,YAAAA,SAzBM,GAyBM/C,GAAG,CAACY,OAAD,EAAU,sBAAqBD,WAArB,oBAAqBA,WAAW,CAAE8B,GAAlC,CAAV,CAzBT;AAAA;AAAA,6CA4BNtC,cAAc,CAAC4C,SAAD,CAAd,CAA0BC,IAA1B,CAA+B,UAACC,CAAD,EAAO;AAE1CpB,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAamB,CAAzB;AAEC3C,cAAAA,MAAM,CAACD,GAAG,CAACd,EAAD,EAAK,iBAAL,EAAwBoB,WAAxB,oBAAwBA,WAAW,CAAE8B,GAArC,CAAJ,EAAgD;AACrDA,gBAAAA,GAAG,EAAE9B,WAAW,CAAC8B,GADoC;AAErD5B,gBAAAA,KAAK,EAAEoC;AAF8C,eAAhD,CAAN;AAIF,aARK,CA5BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAwDE,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClBvD,YAAAA,WAAW,CAACF,cAAc,CAACkB,WAAhB,EAA6BI,QAA7B,CAAX,CACCiC,IADD,CACM,YAAM;AACVpD,cAAAA,qBAAqB,CAACH,cAAc,CAACkB,WAAhB,CAArB,CACCqC,IADD,CACM,YAAM;AACVtC,gBAAAA,UAAU,CAACyC,QAAX,CAAoB,aAApB;AACAC,gBAAAA,KAAK,CAACC,KAAN,CAEE,yBAFF,EAGE,+CAHF,EAIE,CACE;AACEC,kBAAAA,IAAI,EAAE;AADR,iBADF,CAJF;AAWD,eAdD;AAeD,aAjBD,EAkBCC,KAlBD,CAkBO,UAACC,KAAD,EAAW;AAChBJ,cAAAA,KAAK,CAACC,KAAN,CAEE,OAFF,EAGE,6BAHF,EAIE,CACE;AACEC,gBAAAA,IAAI,EAAE;AADR,eADF,CAJF;AAUC,aA7BH;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAkCA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAEpB3D,YAAAA,UAAU,CAACa,WAAD,CAAV,CAAwBqC,IAAxB,CAA6B,YAAM;AAEjCI,cAAAA,KAAK,CAACC,KAAN,CAEE,SAFF,EAGE,+BAHF,EAIE,CACE;AACEC,gBAAAA,IAAI,EAAE;AADR,eADF,CAJF;AAWA5C,cAAAA,UAAU,CAACyC,QAAX,CAAoB,MAApB;AAED,aAfD,EAeGI,KAfH,CAeS,UAACC,KAAD,EAAW;AAGlB3B,cAAAA,OAAO,CAACC,GAAR,CAAY0B,KAAZ;AACD,aAnBD;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAyBA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAI;AACtB3D,IAAAA,OAAO,CAACN,cAAD,CAAP,CACCuD,IADD,CACM,UAACW,EAAD,EAAO;AACXjD,MAAAA,UAAU,CAACyC,QAAX,CAAoB,MAApB;AACD,KAHD,EAICI,KAJD,CAIO,UAACK,GAAD,EAAO;AACZ/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,GAAZ;AACD,KAND;AAOD,GARD;;AAUF,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE;AAAvB,KAAb;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAGK5C,qBAAqB,IAAI,IAAzB,GACC,KAAC,IAAD;AAAA,gBACE,KAAC,KAAD;AAAO,QAAA,MAAM,EAAE6C,OAAO,CAAC9C,UAAD,CAAtB;AAAoC,QAAA,KAAK,EAAE;AAAE+C,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB;AAA3C;AADF,MADD,GAOC,KAAC,IAAD;AAAA,gBACG7C,UAAU,CAACK,GAAX,CAAe,UAACC,IAAD,EAAU;AAGxB,YAAGA,IAAI,CAACC,EAAL,KAAWhB,WAAX,oBAAWA,WAAW,CAAE8B,GAAxB,CAAH,EACA;AACE,iBACE,KAAC,IAAD;AAAA,sBACE,KAAC,KAAD;AAAO,cAAA,MAAM,EAAE;AAAEE,gBAAAA,GAAG,EAAEjB,IAAI,CAACb;AAAZ,eAAf;AAAoC,cAAA,KAAK,EAAE;AAAEmD,gBAAAA,KAAK,EAAE,GAAT;AAAcC,gBAAAA,MAAM,EAAE;AAAtB;AAA3C;AADF,YADF;AAKD;AACF,OAXA;AADH,MAVN,EA4BI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,wBAAd;AAAuC,MAAA,OAAO,EAAErC;AAAhD,MA5BJ,EAiCI,KAAC,IAAD;AAAA;AAAA,MAjCJ,EAkCI,KAAC,IAAD;AAAA;AAAA,MAlCJ,EAmCI,KAAC,IAAD;AAAA,gBAAOjB,WAAP,oBAAOA,WAAW,CAAEuD;AAApB,MAnCJ,EAqCI,KAAC,SAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,KADhB;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,YAAY,EAAEpD;AAHhB,MArCJ,EA2CI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,OAAO,EAAE;AAAA,eAAMkC,WAAW,EAAjB;AAAA;AAAtC,MA3CJ,EA4CI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAEQ;AAAlC,MA5CJ,EA8CI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,KAArC;AAA2C,MAAA,OAAO,EAAE;AAAA,eAAMD,aAAa,EAAnB;AAAA;AAApD,MA9CJ;AAAA,IADJ;AAmDH,CApMD;;AAsMA,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CACd;AACCF,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAE,EADH;AAELM,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ;AADR,CADc,CAAf;AAUA,eAAehE,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, TextInput, Button, Text, Image, Platform, Appearance, Alert } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { db, useAuth, authentication, fbStorage } from \"../Firebase\";\r\nimport { updateEmail, sendEmailVerification, getAuth, deleteUser, signOut } from \"firebase/auth\";\r\nimport { ref, uploadBytes, getStorage, getDownloadURL } from \"firebase/storage\";\r\nimport { collection, doc, setDoc, deleteDoc, onSnapshot } from 'firebase/firestore';\r\n\r\n\r\nconst UserProfile = ({navigation}) => {\r\n\r\n    const currentUser = useAuth();\r\n    const storage = getStorage();\r\n\r\n    const [image, setImage] = useState(null);\r\n    const [newEmail, setEmail] = useState(null);\r\n    const basicImage = '../pictures/profilePicture.png';\r\n    const [profilePictureBoolean, setProfilePictureBoolean] = useState(true);\r\n    const [workoutsDB, setWorkoutsDB] = useState([]);\r\n\r\n\r\n    useEffect (() => {\r\n      const realtime = onSnapshot(collection(db, \"ProfilePictures\"), (snapshot) => {\r\n        setWorkoutsDB(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n      });\r\n      return realtime;\r\n    }, []);\r\n\r\n    //Save image to storage\r\n    const pickImage = async () => {\r\n        console.log(\"Picking Image\");\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n          allowsEditing: true,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n        });\r\n    \r\n        console.log(result);\r\n    \r\n        if(!result.cancelled) {\r\n          // setImage(result.uri);\r\n\r\n          const reff = ref(storage, 'profilePictures/' + currentUser.uid);\r\n\r\n          //Convert image to array of bytes instead of a string\r\n          const img = await fetch(result.uri);\r\n          const bytes = await img.blob();\r\n\r\n          await uploadBytes(reff, bytes);\r\n          // setProfilePictureBoolean(false);\r\n          // func();\r\n\r\n          const reference = ref(storage, 'profilePictures/' + currentUser?.uid ); //+ 'test.jpg'\r\n          // console.log(\"After its set \"+randomImage);\r\n          //X is the URL\r\n          await getDownloadURL(reference).then((x) => {\r\n            // setImage(x);\r\n            console.log(\"The Url \" + x);\r\n            //Set New Exercise Name & Add it to a new document in the collection \r\n             setDoc(doc(db, \"ProfilePictures\", currentUser?.uid ), {\r\n              uid: currentUser.uid,\r\n              image: x,\r\n            })\r\n          })\r\n        }\r\n      };\r\n\r\n      //Return image from storage\r\n      // useEffect (() => {\r\n      //   const func = async () => {\r\n      //     const reference = ref(storage, 'profilePictures/' + currentUser.uid);\r\n      //     await getDownloadURL(reference).then((x) => {\r\n      //       setImage(x);\r\n      //     })\r\n\r\n      //   }\r\n      //   if(image == undefined)\r\n      //   {\r\n      //     func();\r\n      //   }\r\n      // }, []);\r\n\r\n\r\n      const changeEmail = async () => {\r\n        updateEmail(authentication.currentUser, newEmail)\r\n        .then(() => {\r\n          sendEmailVerification(authentication.currentUser)\r\n          .then(() => {\r\n            navigation.navigate('LoginScreen');\r\n            Alert.alert\r\n            (\r\n              \"Email sent to new email\",\r\n              \"Verify your email to be able to log in again!\",\r\n              [\r\n                {\r\n                  text: \"Cancel\",\r\n                },\r\n              ],\r\n            );  \r\n\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          Alert.alert\r\n          (\r\n            \"Error\",\r\n            \"New email invalid or in use\",\r\n            [\r\n              {\r\n                text: \"Cancel\",\r\n              },\r\n            ],\r\n          );        \r\n          });\r\n\r\n      };\r\n\r\n      const deleteAccount = async () => {\r\n\r\n        deleteUser(currentUser).then(() => {\r\n          // User deleted.\r\n          Alert.alert\r\n          (\r\n            \"Succes!\",\r\n            \"Successfully deleted account!\",\r\n            [\r\n              {\r\n                text: \"Cancel\",\r\n              },\r\n            ],\r\n          );        \r\n\r\n          navigation.navigate('Home');\r\n\r\n        }).catch((error) => {\r\n          // An error ocurred\r\n          // ...\r\n          console.log(error);\r\n        });\r\n\r\n      };\r\n\r\n      const SignOutUser = ()=>{\r\n        signOut(authentication)\r\n        .then((re) =>{\r\n          navigation.navigate('Home')\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        })\r\n      }\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center' }}>\r\n            <Text>User Profile</Text>\r\n\r\n            {profilePictureBoolean == true?\r\n              <View>\r\n                <Image source={require(basicImage)} style={{ width: 160, height: 160 }}/>\r\n              </View>\r\n\r\n              :\r\n\r\n              <View>\r\n                {workoutsDB.map((data) => {\r\n                  // setProfilePictureBoolean(data.boolean);\r\n\r\n                  if(data.id == currentUser?.uid)\r\n                  {\r\n                    return(\r\n                      <View>\r\n                        <Image source={{ uri: data.image }} style={{ width: 160, height: 160 }} />\r\n                      </View>\r\n                    )\r\n                  }\r\n                })}\r\n              </View>\r\n            }\r\n\r\n\r\n\r\n            <Button title=\"Change Profile Picture\" onPress={pickImage} />\r\n\r\n            {/* <Text>Email: {currentUser?.email}</Text>\r\n            <Text>User Id: {currentUser?.uid}</Text> */}\r\n\r\n            <Text>Change Email</Text>\r\n            <Text>Current Email</Text>\r\n            <Text>{currentUser?.email}</Text>\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='New Email'\r\n              onChangeText={setEmail}\r\n                >\r\n            </TextInput>\r\n            <Button title=\"Update Email\" onPress={() => changeEmail() } />\r\n            <Button title=\"Sign out\" onPress={SignOutUser}></Button>\r\n\r\n            <Button title=\"Delete Account\" color='red' onPress={() => deleteAccount()}/>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create\r\n({\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}