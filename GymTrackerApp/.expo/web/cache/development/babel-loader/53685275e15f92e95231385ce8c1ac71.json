{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as React from 'react';\nimport { auth, authentication } from \"../Firebase\";\nimport { signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      passsword = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isSignedIn = _React$useState6[0],\n      setIsSignedIn = _React$useState6[1];\n\n  var LogInUser = function LogInUser() {\n    signInWithEmailAndPassword(authentication, email, passsword).then(function (re) {\n      setIsSignedIn(true);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var SignOutUser = function SignOutUser() {\n    signOut(authentication).then(function (re) {\n      setIsSignedIn(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Enter Log In Details\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: passsword,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      placeholder: \"Password\",\n      secureTextEntry: true\n    }), isSignedIn === true ? _jsx(Button, {\n      title: \"Sign out\",\n      onPress: SignOutUser\n    }) : _jsx(Button, {\n      title: \"Sign In\",\n      onPress: LogInUser\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    backgroundColor: 'white'\n  }\n});\nexport default LogInScreen;","map":{"version":3,"sources":["C:/Users/oskar/Documents/SemesterTwo/FinalYear_Project/GymTrackerApp/screens/LoginScreen.js"],"names":["React","auth","authentication","signInWithEmailAndPassword","signOut","LogInScreen","navigation","useState","email","setEmail","passsword","setPassword","isSignedIn","setIsSignedIn","LogInUser","then","re","catch","err","console","log","SignOutUser","flex","alignItems","justifyContent","styles","input","text","StyleSheet","create","container","backgroundColor","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Button, TextInput  } from 'react-native';\r\nimport * as React from 'react';\r\nimport { auth, authentication } from '../Firebase';\r\nimport { signInWithEmailAndPassword, signOut  } from \"firebase/auth\";\r\n\r\nfunction LogInScreen({ navigation }) {\r\n  const [email, setEmail] = React.useState('')\r\n  const [passsword, setPassword] = React.useState('')\r\n\r\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\r\n\r\n  const LogInUser = ()=>{\r\n    signInWithEmailAndPassword(authentication, email, passsword)\r\n    .then((re) =>{\r\n      setIsSignedIn(true);\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  const SignOutUser = ()=>{\r\n    signOut(authentication)\r\n    .then((re) =>{\r\n      setIsSignedIn(false);\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n \r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Enter Log In Details</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        value={email}\r\n        onChangeText={text => setEmail(text)}\r\n        placeholder=\"Email\"\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        value={passsword}\r\n        onChangeText={text => setPassword(text)}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n      />\r\n\r\n      {/* <Button\r\n        style={{marginBottom: 20}}\r\n        title=\"Log In\"\r\n        onPress={ () => navigation.navigate('MainMenuScreen') } //() => navigation.navigate('MainMenuScreen')\r\n      /> */}\r\n\r\n      {isSignedIn === true?\r\n        <Button title=\"Sign out\" onPress={SignOutUser}></Button>\r\n        :\r\n        <Button title=\"Sign In\" onPress={LogInUser}></Button>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create\r\n({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 2,\r\n    padding: 10,\r\n    backgroundColor: 'white'\r\n  },\r\n});\r\n\r\nexport default LogInScreen;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}